AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
- AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description: AWS CodeStar projectID used to associate new resources to team members
  CodeDeployRole:
    Type: String
    Description: IAM role to allow AWS CodeDeploy to manage deployment of AWS Lambda functions
  Stage:
    Type: String
    Description: The name for a project pipeline stage, such as Staging or Prod, for which resources are provisioned and deployed.
    Default: ''
  CertArn:
    Type: String
    Description: Custom domain certificate ARN
    Default: ''
  ZoneId:
    Type: String
    Description:  Custom domain ZoneID
    Default: ''

Globals:
  Function:
    AutoPublishAlias: live
    DeploymentPreference:
      Enabled: true
      Type: AllAtOnce
      Role: !Ref CodeDeployRole

Resources:
  CodestarHandler:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub 'awscodestar-${ProjectId}-lambda-codestar-me-handler'
      Handler: main
      Runtime: go1.x
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      Events:
        GetIndexEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Path: /
            Method: get
        GetEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Path: /{fullpath+}
            Method: get
        PostEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Path: /
            Method: post
  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Domain:
        DomainName: codestar.me
        CertificateArn: !Ref CertArn
        Route53:
          HostedZoneId: !Ref ZoneId
      DefaultRouteSettings:
        ThrottlingBurstLimit: 10
        ThrottlingRateLimit: 10

  LambdaExecutionRole:
    Description: Creating service role in IAM for AWS Lambda
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'CodeStar-${ProjectId}-Execution${Stage}'
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [lambda.amazonaws.com]
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      PermissionsBoundary: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/CodeStar_${ProjectId}_PermissionsBoundary'
  DynamoDBItems:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: codestar.me
      AttributeDefinitions:
        - AttributeName: "ref"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "ref"
          KeyType: "HASH"
      TimeToLiveSpecification:
        AttributeName: expire
        Enabled: true
      ProvisionedThroughput:
        ReadCapacityUnits: 0
        WriteCapacityUnits: 0
